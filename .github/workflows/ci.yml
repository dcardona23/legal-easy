name: CI

on:
  push:
    branches:
      - main
      - cypress_ci
      - user_authentication
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: daniellecardona
          POSTGRES_PASSWORD: password
          POSTGRES_DB: legal_easy_test  # Ensure this matches the DB name in `database.yml`
        options: >-
          --health-cmd="pg_isready -U daniellecardona"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install backend dependencies
        run: |
          cd backend
          bundle install

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h postgres -U daniellecardona; do
            echo "Waiting for PostgreSQL..."
            sleep 5
          done

      - name: Create and migrate the test database
        run: |
          cd backend
          bundle exec rake db:create RAILS_ENV=test
          bundle exec rake db:migrate RAILS_ENV=test

      - name: Run backend tests
        run: |
          cd backend
          bundle exec rspec

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23.6.1'  

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Install Cypress
        run: |
          cd frontend
          npm install cypress --save-dev

      - name: Run Cypress tests
        run: |
          cd frontend
          npx cypress run --headless --browser chrome

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Deploy frontend to production (if on main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X POST https://api.vercel.com/v13/deployments \
            -H 'Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{
                  "name": "legal-easy",
                  "target": "production",
                  "gitSource": {
                    "branch": "main",
                    "ref": "refs/heads/main"}
                }'

      - name: Deploy frontend to preview (if pull request)
        if: github.event_name == 'pull_request'
        run: |
          curl -X POST https://api.vercel.com/v13/deployments \
            -H 'Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{
                  "name": "legal-easy",
                  "target": "preview",
                  "gitSource": {"branch": "${{ github.head_ref }}"}
                }'
